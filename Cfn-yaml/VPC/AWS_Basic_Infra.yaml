AWSTemplateFormatVersion: 2010-09-09
Description: Creates a two-subnet VPC (public w/ NAT gateway and private) (c)
  2017 Air11 Technology LLC -- licensed under the Apache OpenSource 2.0 license,
  https://opensource.org/licenses/Apache-2.0
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: VPC configuration parameters
        Parameters:
          - VPCNAME
          - VPCCIDR
          - PublicSubnetCIDR1
          - PublicSubnetCIDR2
          - PublicSubnetCIDR3
          - PrivateSubnetCIDR1
          - PrivateSubnetCIDR2
          - PrivateSubnetCIDR3
          - SSHLocation
    ParameterLabels:
      VPCNAME:
        default: Enter CIDR of new VPC
      VPCCIDR:
        default: Enter CIDR of new VPC
      PublicSubnetCIDR1:
        default: Enter CIDR of the public subnet-1
      PublicSubnetCIDR2:
        default: Enter CIDR of the public subnet-2
      PublicSubnetCIDR3:
        default: Enter CIDR of the public subnet-3
      PrivateSubnetCIDR1:
        default: Enter CIDR of the private subnet-1
      PrivateSubnetCIDR2:
        default: Enter CIDR of the private subnet-2
      PrivateSubnetCIDR3:
        default: Enter CIDR of the private subnet-3
      SSHLocation:
        default: Subnet allowed to ssh on TCP to public subnet
Parameters:
  VPCNAME:
    Default: TEST-VPC
    Description: Name for entire VPC.
    Type: String
  VPCCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.10.0.0/16
    Description: CIDR block for entire VPC.
    Type: String
  PublicSubnetCIDR1:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.10.1.0/24
    Description: CIDR block for the public subnet
    Type: String
  PublicSubnetCIDR2:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.10.2.0/24
    Description: CIDR block for the public subnet
    Type: String
  PublicSubnetCIDR3:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.10.3.0/24
    Description: CIDR block for the public subnet
    Type: String
  PrivateSubnetCIDR1:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.10.10.0/24
    Description: CIDR block for the private subnet-1
    Type: String
  PrivateSubnetCIDR2:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.10.20.0/24
    Description: CIDR block for the private subnet-2
    Type: String
  PrivateSubnetCIDR3:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.10.30.0/24
    Description: CIDR block for the private subnet-3
    Type: String
  SSHLocation:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/0-28
    Default: 0.0.0.0/0
    Description: Network allowed to ssh to instances in public subnet.
    Type: String
Mappings: {}
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: true
      EnableDnsHostnames: true
      CidrBlock:
        Ref: VPCCIDR
      Tags:
        - Key: Name
          Value:
            Ref: VPCNAME
        - Key: CloudFormationStack
          Value:
            Ref: AWS::StackId
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: IGW
        - Key: CloudFormationStack
          Value:
            Ref: AWS::StackId
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone: us-east-1a
      CidrBlock:
        Ref: PublicSubnetCIDR1
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - "-"
              - - Ref: VPCNAME
                - Public-Subnet-1
        - Key: CloudFormationStack
          Value:
            Ref: AWS::StackId
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone: us-east-1b
      CidrBlock:
        Ref: PublicSubnetCIDR2
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - "-"
              - - Ref: VPCNAME
                - Public-Subnet-2
        - Key: CloudFormationStack
          Value:
            Ref: AWS::StackId
  PublicSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone: us-east-1c
      CidrBlock:
        Ref: PublicSubnetCIDR3
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - "-"
              - - Ref: VPCNAME
                - Public-Subnet-3
        - Key: CloudFormationStack
          Value:
            Ref: AWS::StackId
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone: us-east-1a
      CidrBlock:
        Ref: PrivateSubnetCIDR1
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - "-"
              - - Ref: VPCNAME
                - Private-Subnet-1
        - Key: CloudFormationStack
          Value:
            Ref: AWS::StackId
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone: us-east-1b
      CidrBlock:
        Ref: PrivateSubnetCIDR2
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - "-"
              - - Ref: VPCNAME
                - Private-Subnet-2
        - Key: CloudFormationStack
          Value:
            Ref: AWS::StackId
  PrivateSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      AvailabilityZone: us-east-1c
      CidrBlock:
        Ref: PrivateSubnetCIDR3
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - "-"
              - - Ref: VPCNAME
                - Private-Subnet-3
        - Key: CloudFormationStack
          Value:
            Ref: AWS::StackId
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway
  PublicSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - "-"
              - - Ref: VPCNAME
                - PublicRoutingTable
  PrivateSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - "-"
              - - Ref: VPCNAME
                - PrivateRoutingTable
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId:
        Ref: PublicSubnetRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
  PrivateRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId:
        Ref: PrivateSubnetRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NAT
  PublicSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet1
      RouteTableId:
        Ref: PublicSubnetRouteTable
  PublicSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet2
      RouteTableId:
        Ref: PublicSubnetRouteTable
  PublicSubnetRouteTableAssociation3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet3
      RouteTableId:
        Ref: PublicSubnetRouteTable
  PrivateSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet1
      RouteTableId:
        Ref: PrivateSubnetRouteTable
  PrivateSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet2
      RouteTableId:
        Ref: PrivateSubnetRouteTable
  PrivateSubnetRouteTableAssociation3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet3
      RouteTableId:
        Ref: PrivateSubnetRouteTable
  PublicInstanceSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId:
        Ref: VPC
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp:
            Ref: SSHLocation
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ""
              - - "PublicSG "
                - Ref: VPCCIDR
        - Key: CloudFormationStack
          Value:
            Ref: AWS::StackId
  PrivateInstanceSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId:
        Ref: VPC
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp:
            Ref: SSHLocation
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ""
              - - "PrivateSG "
                - Ref: VPCCIDR
        - Key: CloudFormationStack
          Value:
            Ref: AWS::StackId
  EIP:
    DependsOn: AttachGateway
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: NAT-EIP
  NAT:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - EIP
          - AllocationId
      SubnetId:
        Ref: PublicSubnet1
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - "-"
              - - Ref: VPCNAME
                - NATGW
  ELB:
    DependsOn: NAT
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Name: MyELB
      Scheme: internet-facing
      Subnets:
        - Ref: PublicSubnet1
        - Ref: PublicSubnet2
        - Ref: PublicSubnet3
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - "-"
              - - Ref: VPCNAME
                - ELB
      Type: network
  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckProtocol: TCP
      Name: TEST-TG
      Port: 80
      Protocol: TCP
      Tags:
        - Key: Name
          Value: TEST-TG
      TargetType: instance
      Targets:
        - Id:
            Ref: WebServer1
          Port: 80
        - Id:
            Ref: WebServer2
          Port: 80
      VpcId:
        Ref: VPC
  NLBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: WebAppTargetGroup
      LoadBalancerArn:
        Ref: ELB
      Port: 80
      Protocol: TCP
  WebServer1:
    DependsOn: NAT
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0915bcb5fa77e4892
      InstanceType: t2.micro
      KeyName: DeleteLater
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: "0"
          DeleteOnTermination: true
          SubnetId:
            Ref: PrivateSubnet1
          GroupSet:
            - Ref: PublicInstanceSG
            - Ref: PrivateInstanceSG
      Tags:
        - Key: Name
          Value: WebServer-1
      UserData:
        Fn::Base64:
          Fn::Join:
            - ""
            - - "#!/bin/bash -ex"
              - "\n"
              - "\n"
              - yum update -y
              - "\n"
              - "\n"
              - amazon-linux-extras install nginx1.12 -y
              - "\n"
              - "\n"
              - echo '<h1>WEBSERVER-1</h1>' >> /usr/share/nginx/html/index.html
              - "\n"
              - service nginx start
  WebServer2:
    DependsOn: NAT
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0915bcb5fa77e4892
      InstanceType: t2.micro
      KeyName: DeleteLater
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: "0"
          DeleteOnTermination: true
          SubnetId:
            Ref: PrivateSubnet2
          GroupSet:
            - Ref: PublicInstanceSG
            - Ref: PrivateInstanceSG
      Tags:
        - Key: Name
          Value: WebServer-2
      UserData:
        Fn::Base64:
          Fn::Join:
            - ""
            - - "#!/bin/bash -ex"
              - "\n"
              - "\n"
              - yum update -y
              - "\n"
              - "\n"
              - amazon-linux-extras install nginx1.12 -y
              - "\n"
              - "\n"
              - echo '<h1>WEBSERVER-2</h1>' >> /usr/share/nginx/html/index.html
              - "\n"
              - service nginx start
Outputs:
  VPCId:
    Description: VPCId of the newly created VPC
    Value:
      Ref: VPC
  PublicSubnet1:
    Description: SubnetId of the public subnet
    Value:
      Ref: PublicSubnet1
